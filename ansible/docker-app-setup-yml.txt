- hosts: appsrvgrp
  become: true
  vars:
    timestamp: "{{ansible_date_time.date}}_{{ansible_date_time.hour}}_{{ansible_date_time.minute}}"
  tasks:

  - name: Download latest VProfile.war from nexus
    get_url:
      url: "http://{{USER}}:{{PASS}}@{{nexusip}}:8081/repository/{{reponame}}/{{groupid}}/{{artifactid}}/{{build}}-{{time}}/{{vprofile_version}}"
      dest: "/tmp/ROOT.war"
    register: wardeploy
    tags:
    - deploy

  - stat:
      path: /tmp/ROOT.war
    register: artifact_stat
    tags:
    - deploy
  - name: try and take backup of ROOT.war
    shell: cp -r ROOT.war old_ROOT.war 
    when: artifact_stat.stat.exists
    args:
      chdir: /tmp/

  - name: delete current Docker-files
    file:
      path: /tmp/compose
      state: absent
  - name: delete current Docker-files
    file:
      path: /tmp/Docker-files
      state: absent     

  - name: copy compose to remote server
    copy:
      src: compose
      dest: /tmp/
  - name: copy docker files to remote server 
    copy:
      src: Docker-files
      dest: /tmp/   
  - name: synchronize our ROOT.war with dockerfile location
    synchronize:  
      src: /tmp/ROOT.war
      dest: /tmp/Docker-files/app/ROOT.war  
    delegate_to: "{{ inventory_hostname }}"  

  - name: Install aptitude
    apt:
      name: aptitude
      state: latest
      update_cache: yes
  - name: install required packages
    apt:
      pkg:
      - apt-transport-https
      - ca-certificates
      - curl
      - software-properties-common
      - python3-pip 
      - virtualenv
      - python3-setuptools
      state: latest
      update_cache: yes   

  - name: Add docker GPG apt key
    apt_key:
      url: "https://download.docker.com/linux/ubuntu/gpg"   
      state: present

  - name: add Docker repository
    apt_repository:
      repo: deb https://download.docker.com/linux/ubuntu jammy stable
      state: present    

  - name: update apt cache and Install docker engine  
    apt: 
      name: docker-ce
      state: latest
      update_cache: yes   

  - name:  install docker module for python 
    pip:
      name: docker

  - name: install docker compose using pip
    pip:
      name: docker-compose
## Building our images and run containers from here
  - name: dockerhub login
    docker_login:
      username: mukeshktc
      password: "{{dockerPass}}"
  - name: docker build app
    community.docker.docker_image:  
      build:
        path: /tmp/Docker-files/app
      name: mukeshktc/vproapp
      tag: V1
      push: true
      source: build 
  - name: docker build db
    community.docker.docker_image:  
      build:
        path: /tmp/Docker-files/db
      name: mukeshktc/vprodb
      tag: V1
      push: true
      source: build     
  - name: docker build web
    community.docker.docker_image:  
      build:
        path: /tmp/Docker-files/web
      name: mukeshktc/vproweb
      tag: V1
      push: true
      source: build  

  - name: docker compose to group our containers in a network
    community.docker.docker_compose:
      project_src: /tmp/compose  
      state: present    

